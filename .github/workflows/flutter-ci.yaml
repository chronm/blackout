name: Flutter CI

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
#      - uses: actions/setup-java@v1
#        with:
#          java-version: '12.x'

      - run: |
          echo "${{ secrets.GOOGLE_PLAY_SIGNING_KEY }}" > key.jks.asc
          gpg -d --passphrase "${{ secrets.GOOGLE_PLAY_SIGNING_KEY_PASSWORD }}" --batch key.jks.asc > android/app/key.jks
          echo "${{ secrets.GOOGLE_PLAY_KEY_PROPERTIES }}" > android/key.properties

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          channel: 'dev' # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      - run: flutter upgrade

      - run: sudo apt-get install -y libsqlite3-dev

      # Get flutter dependencies.
      - run: flutter pub get

      # Check for any formatting issues in the code.
      - run: dart tools/format.dart --set-exit-if-changed

      # Statically analyze the Dart code for any errors.
      - run: flutter analyze .

      # Run widget tests for our flutter project.
      - run: flutter test

      # Build bundle.
      - run: flutter build appbundle --target-platform android-arm,android-arm64

      # Build apk.
      - run: flutter build apk --target-platform android-arm64 --split-per-abi

      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v1
        with:
          name: arm64-v8a.apk
          path: build/app/outputs/apk/release/app-arm64-v8a-release.apk

      - uses: actions/upload-artifact@v1
        with:
          name: bundle.aab
          path: build/app/outputs/bundle/release/app-release.aab
